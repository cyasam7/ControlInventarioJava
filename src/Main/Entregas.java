/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Conexion.Conexion;
import java.sql.Connection;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;

/**
 *
 * @author Alexander
 */
public class Entregas extends javax.swing.JFrame {

    Conexion conexion = new Conexion();
    Connection con = conexion.getConnection();
    int cantidadTrabajador;
    String folio="";
    String codigo="";
    String cantidad="";
    
    String folioP="";
    String codigoP="";
    String cantidadP="";
    public Entregas() {
        initComponents();
        this.setTitle("Entregas");
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setLocationRelativeTo(null);
        cargarTablaTrabajadores();
        cargarTablaPersonas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaTrabajadores = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaAlumnos = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 135, 158));

        jButton1.setText("Recibir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tablaTrabajadores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaTrabajadores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaTrabajadoresMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaTrabajadores);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Trabajadores", jPanel1);

        jPanel2.setBackground(new java.awt.Color(51, 135, 158));

        tablaAlumnos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaAlumnos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaAlumnosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaAlumnos);

        jButton2.setText("Recibir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(617, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(285, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(39, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Personas", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(codigo.equals("") || folio.equals("") || cantidad.equals("")){
            JOptionPane.showMessageDialog(this, "Seleccionar alguna fila en la tabla");
            return;
        }
        try {
            recibir(folio, codigo, cantidad, "historialtrabajadores");
            JOptionPane.showMessageDialog(this, "Se recivio el producto");
            cargarTablaTrabajadores();
        } catch (SQLException e) {
            System.out.println(e);
            try {
                con.rollback();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }finally{
            try {
                con.setAutoCommit(true);
            } catch (SQLException ex) {
                Logger.getLogger(Entregas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(codigoP.equals("") || folioP.equals("") || cantidadP.equals("")){
            JOptionPane.showMessageDialog(this, "Seleccionar alguna fila en la tabla");
            return;
        }
        try {
            recibir(folioP, codigoP, cantidadP, "historialpersonas");
            JOptionPane.showMessageDialog(this, "Se recivio el producto");
            cargarTablaTrabajadores();
            limpiarVariables();
        } catch (SQLException e) {
            System.out.println(e);
            try {
                con.rollback();
            } catch (SQLException ex) {
                System.out.println(ex);
            }
        }catch(Exception e){
            
        } finally{
            try {
                con.setAutoCommit(true);
            } catch (SQLException ex) {
                Logger.getLogger(Entregas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tablaAlumnosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaAlumnosMouseClicked
        int seleccion = tablaAlumnos.rowAtPoint(evt.getPoint());
        String nom = String.valueOf(tablaAlumnos.getValueAt(seleccion, 0));
        String apellido =String.valueOf(tablaAlumnos.getValueAt(seleccion, 1));
        String folio = String.valueOf(tablaAlumnos.getValueAt(seleccion, 8));
        String codigo = String.valueOf(tablaAlumnos.getValueAt(seleccion, 4));
        String cantidad = String.valueOf(tablaAlumnos.getValueAt(seleccion, 5));
        
        this.codigoP=codigo;
        this.cantidadP=cantidad;
        this.folioP= folio;
        String oracion = "Seleccionaste a " + nom + " " + apellido + " con folio "+folio;
        JOptionPane.showMessageDialog(this, oracion);


    }//GEN-LAST:event_tablaAlumnosMouseClicked

    private void tablaTrabajadoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaTrabajadoresMouseClicked
        int seleccion = tablaTrabajadores.rowAtPoint(evt.getPoint());
        String nom = String.valueOf(tablaTrabajadores.getValueAt(seleccion, 0));
        String apellido =String.valueOf(tablaTrabajadores.getValueAt(seleccion, 1));
        String folio = String.valueOf(tablaTrabajadores.getValueAt(seleccion, 6));
        String codigo = String.valueOf(tablaTrabajadores.getValueAt(seleccion, 9));
        String cantidad = String.valueOf(tablaTrabajadores.getValueAt(seleccion, 8));
        
        this.codigo=codigo;
        this.cantidad=cantidad;
        this.folio= folio;
        String oracion = "Seleccionaste a " + nom + " " + apellido + " con folio "+folio;
        JOptionPane.showMessageDialog(this, oracion);
    }//GEN-LAST:event_tablaTrabajadoresMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Entregas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Entregas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Entregas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Entregas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Entregas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tablaAlumnos;
    private javax.swing.JTable tablaTrabajadores;
    // End of variables declaration//GEN-END:variables
public void cargarTablaTrabajadores() {
        String titulos[] = {
            "Nombre", "Apellido", "Area", "Turno", "Fecha", "Entrego", "Folio", "Producto", "Cantidad", "Codigo"
        };
        DefaultTableModel dtm = new DefaultTableModel(titulos, 0);

        try {
            PreparedStatement ps = con.prepareStatement("select * from vhistorialtrabajador where entrego=?");
            ps.setString(1, "No entrego");
            ResultSet rs = ps.executeQuery();
            Object row[] = new Object[10];
            while (rs.next()) {
                row[0] = rs.getString("nombre");
                row[1] = rs.getString("apellido");
                row[2] = rs.getString("area");
                row[3] = rs.getString("turno");
                row[4] = rs.getString("fecha");
                row[5] = rs.getString("entrego");
                row[6] = rs.getString("folio");
                row[7] = rs.getString("Producto");
                row[8] = rs.getString("Cantidad");
                row[9] = rs.getString("Codigo");
                dtm.addRow(row);
            }
            tablaTrabajadores.setModel(dtm);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    public void cargarTablaPersonas() {
        String titulos[] = {
            "Nombre", "Apellido", "Descripcion", "Producto", "CodigoProducto", "Cantidad", "Fecha", "Entrego", "Folio"
        };
        DefaultTableModel dtm = new DefaultTableModel(titulos, 0);

        try {
            PreparedStatement ps = con.prepareStatement("select * from vhistorialpersonas where entrego=?");
            ps.setString(1, "No entrego");
            ResultSet rs = ps.executeQuery();
            Object row[] = new Object[10];
            while (rs.next()) {
                row[0] = rs.getString("nombre");
                row[1] = rs.getString("apellido");
                row[2] = rs.getString("descripcion");
                row[3] = rs.getString("producto");
                row[4] = rs.getString("codigoproducto");
                row[5] = rs.getString("cantidad");
                row[6] = rs.getString("fecha");
                row[7] = rs.getString("entrego");
                row[8] = rs.getString("folio");
                dtm.addRow(row);
            }
            tablaAlumnos.setModel(dtm);
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e.toString());
        }
    }

    public void recibir(String folio,String codigo,String cantidad ,String tabla) throws SQLException {
        System.out.println(cantidad);
        System.out.println(folio);
        System.out.println(codigo);
        
        con.setAutoCommit(false);
        PreparedStatement ps = con.prepareStatement("UPDATE "+tabla+" SET "
                + "entrego=? WHERE folio=?");
        ps.setString(1, "Se entrego");
        ps.setString(2, folio);
        ps.executeUpdate();
        ps.close();
        
//        PreparedStatement dato = con.prepareStatement("select * from productos where codigo=?");
//        dato.setString(1, codigo);
//        ResultSet rs = dato.executeQuery();
//        int pCantidad = rs.getInt("cantidad");  
//        int nuevaCantidad =  pCantidad+Integer.parseInt(cantidad);
//        dato.close();
        
        PreparedStatement ps2 = con.prepareStatement("UPDATE `inventario`.`productos` "
                + "SET Cantidad=Cantidad+?  "
                + "WHERE Codigo =?");
        ps2.setString(1, cantidad);
        ps2.setString(2, codigo);
        ps2.executeUpdate();
        ps2.close();
        con.commit();
    }
    public void limpiarVariables(){
        this.codigoP="";
        this.cantidadP="";
        this.folioP="";
        this.codigo="";
        this.cantidad="";
        this.folio="";
    }
}
